// Code generated by protoc-gen-go.
// source: gen.proto
// DO NOT EDIT!

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 心跳请求0
type HeartbeatReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *HeartbeatReq) Reset()                    { *m = HeartbeatReq{} }
func (m *HeartbeatReq) String() string            { return proto.CompactTextString(m) }
func (*HeartbeatReq) ProtoMessage()               {}
func (*HeartbeatReq) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// 心跳回复1
type HeartbeatAck struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *HeartbeatAck) Reset()                    { *m = HeartbeatAck{} }
func (m *HeartbeatAck) String() string            { return proto.CompactTextString(m) }
func (*HeartbeatAck) ProtoMessage()               {}
func (*HeartbeatAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

// 通用的错误回复2
type ErrorAck struct {
	Errid            *int32  `protobuf:"varint,1,req,name=errid" json:"errid,omitempty"`
	Errstr           *string `protobuf:"bytes,2,req,name=errstr" json:"errstr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ErrorAck) Reset()                    { *m = ErrorAck{} }
func (m *ErrorAck) String() string            { return proto.CompactTextString(m) }
func (*ErrorAck) ProtoMessage()               {}
func (*ErrorAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *ErrorAck) GetErrid() int32 {
	if m != nil && m.Errid != nil {
		return *m.Errid
	}
	return 0
}

func (m *ErrorAck) GetErrstr() string {
	if m != nil && m.Errstr != nil {
		return *m.Errstr
	}
	return ""
}

func init() {
	proto.RegisterType((*HeartbeatReq)(nil), "protomsg.heartbeat_req")
	proto.RegisterType((*HeartbeatAck)(nil), "protomsg.heartbeat_ack")
	proto.RegisterType((*ErrorAck)(nil), "protomsg.error_ack")
}

var fileDescriptor3 = []byte{
	// 107 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4f, 0xcd, 0xd3,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xb9, 0xc5, 0xe9, 0x4a, 0xfc, 0x5c, 0xbc,
	0x19, 0xa9, 0x89, 0x45, 0x25, 0x49, 0xa9, 0x89, 0x25, 0xf1, 0x45, 0xa9, 0x85, 0xa8, 0x02, 0x89,
	0xc9, 0xd9, 0x4a, 0x96, 0x5c, 0x9c, 0xa9, 0x45, 0x45, 0xf9, 0x45, 0x20, 0x8e, 0x90, 0x08, 0x17,
	0x2b, 0x90, 0x93, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa4, 0xc1, 0x1a, 0x04, 0xe1, 0x08, 0x89, 0x71,
	0xb1, 0x01, 0x19, 0xc5, 0x25, 0x45, 0x12, 0x4c, 0x40, 0x61, 0xce, 0x20, 0x28, 0x0f, 0x10, 0x00,
	0x00, 0xff, 0xff, 0xbb, 0xf3, 0xf8, 0x4e, 0x72, 0x00, 0x00, 0x00,
}
